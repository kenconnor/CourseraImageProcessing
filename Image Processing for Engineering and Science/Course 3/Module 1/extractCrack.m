function results = extractCrack(RGB)
%createMask  Threshold RGB image using auto-generated code from colorThresholder app.
%  [BW,MASKEDRGBIMAGE] = createMask(RGB) thresholds image RGB using
%  auto-generated code from the colorThresholder app. The colorspace and
%  range for each channel of the colorspace were set within the app. The
%  segmentation mask is returned in BW, and a composite of the mask and
%  original RGB images is returned in maskedRGBImage.

% Auto-generated by colorThresholder app on 20-Feb-2023
%------------------------------------------------------

ref = imread("../../data/data/Concrete Crack Images/00012.jpg");
imgMatched = imhistmatch(RGB,ref);
% Convert RGB image to chosen color space
I = rgb2hsv(imgMatched);

% Define thresholds for channel 1 based on histogram settings
channel1Min = 0.000;
channel1Max = 1.000;

% Define thresholds for channel 2 based on histogram settings
channel2Min = 0.000;
channel2Max = 1.000;

% Define thresholds for channel 3 based on histogram settings
channel3Min = 0.000;
channel3Max = 0.390;

% Create mask based on chosen histogram thresholds
sliderBW = (I(:,:,1) >= channel1Min ) & (I(:,:,1) <= channel1Max) & ...
    (I(:,:,2) >= channel2Min ) & (I(:,:,2) <= channel2Max) & ...
    (I(:,:,3) >= channel3Min ) & (I(:,:,3) <= channel3Max);
BW = sliderBW;

% 穴の塗りつぶし
BW = imfill(BW, 'holes');

% default によるマスクのクローズ
radius = 13;
decomposition = 0;
se = strel('disk', radius, decomposition);
BW = imclose(BW, se);

% Initialize output masked image based on input image.
maskedRGBImage = RGB;

% Set background pixels where BW is false to zero.
maskedRGBImage(repmat(~BW,[1 1 3])) = 0;

rp = regionprops("table", BW,"Area");
distToEdge = bwdist(~BW);
maxWidth = 2 * max(distToEdge, [],"all");

results.BW = BW;
results.maskedRGBImage = maskedRGBImage;
results.NumRegions = height(rp);
results.Area = sum(rp.Area);
end
